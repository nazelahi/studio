
-- Enable UUID generation
create extension if not exists "uuid-ossp" with schema "extensions";

-- Tenants Table
CREATE TABLE public.tenants (
    id bigint NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    name text NOT NULL,
    email text NOT NULL,
    phone text,
    property text NOT NULL,
    rent real NOT NULL,
    join_date date NOT NULL,
    notes text,
    status text DEFAULT 'Active'::text NOT NULL,
    avatar text NOT NULL,
    type text,
    documents jsonb
);

ALTER TABLE public.tenants ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.tenants_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY public.tenants ADD CONSTRAINT tenants_pkey PRIMARY KEY (id);

-- Enable RLS for tenants
ALTER TABLE public.tenants ENABLE ROW LEVEL SECURITY;

-- Policies for tenants
CREATE POLICY "Enable read access for all users" ON public.tenants FOR SELECT USING (true);
CREATE POLICY "Enable insert for authenticated users only" ON public.tenants FOR INSERT TO authenticated WITH CHECK (true);
CREATE POLICY "Enable update for authenticated users only" ON public.tenants FOR UPDATE TO authenticated USING (true);
CREATE POLICY "Enable delete for authenticated users only" ON public.tenants FOR DELETE TO authenticated USING (true);


-- Rent Entries Table
CREATE TABLE public.rent_entries (
    id bigint NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    tenant_id bigint NOT NULL,
    name text NOT NULL,
    property text NOT NULL,
    rent real NOT NULL,
    due_date date NOT NULL,
    status text DEFAULT 'Pending'::text NOT NULL,
    avatar text,
    "year" smallint NOT NULL,
    "month" smallint NOT NULL,
    payment_date date,
    collected_by text
);

ALTER TABLE public.rent_entries ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.rent_entries_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY public.rent_entries ADD CONSTRAINT rent_entries_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.rent_entries ADD CONSTRAINT rent_entries_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id) ON DELETE CASCADE;

-- Enable RLS for rent_entries
ALTER TABLE public.rent_entries ENABLE ROW LEVEL SECURITY;

-- Policies for rent_entries
CREATE POLICY "Enable read access for all users" ON public.rent_entries FOR SELECT USING (true);
CREATE POLICY "Enable insert for authenticated users only" ON public.rent_entries FOR INSERT TO authenticated WITH CHECK (true);
CREATE POLICY "Enable update for authenticated users only" ON public.rent_entries FOR UPDATE TO authenticated USING (true);
CREATE POLICY "Enable delete for authenticated users only" ON public.rent_entries FOR DELETE TO authenticated USING (true);


-- Expenses Table
CREATE TABLE public.expenses (
    id bigint NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    date date NOT NULL,
    category text NOT NULL,
    amount real NOT NULL,
    description text,
    status text DEFAULT 'Due'::text NOT NULL
);

ALTER TABLE public.expenses ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.expenses_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY public.expenses ADD CONSTRAINT expenses_pkey PRIMARY KEY (id);

-- Enable RLS for expenses
ALTER TABLE public.expenses ENABLE ROW LEVEL SECURITY;

-- Policies for expenses
CREATE POLICY "Enable read access for all users" ON public.expenses FOR SELECT USING (true);
CREATE POLICY "Enable insert for authenticated users only" ON public.expenses FOR INSERT TO authenticated WITH CHECK (true);
CREATE POLICY "Enable update for authenticated users only" ON public.expenses FOR UPDATE TO authenticated USING (true);
CREATE POLICY "Enable delete for authenticated users only" ON public.expenses FOR DELETE TO authenticated USING (true);


-- Deposits Table
CREATE TABLE public.deposits (
    id bigint NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    "year" smallint NOT NULL,
    "month" smallint NOT NULL,
    amount real NOT NULL,
    deposit_date date NOT NULL,
    receipt_url text
);

ALTER TABLE public.deposits ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.deposits_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY public.deposits ADD CONSTRAINT deposits_pkey PRIMARY KEY (id);

-- Enable RLS for deposits
ALTER TABLE public.deposits ENABLE ROW LEVEL SECURITY;

-- Policies for deposits
CREATE POLICY "Enable read access for all users" ON public.deposits FOR SELECT USING (true);
CREATE POLICY "Enable insert for authenticated users only" ON public.deposits FOR INSERT TO authenticated WITH CHECK (true);
CREATE POLICY "Enable update for authenticated users only" ON public.deposits FOR UPDATE TO authenticated USING (true);
CREATE POLICY "Enable delete for authenticated users only" ON public.deposits FOR DELETE TO authenticated USING (true);


-- Notices Table
CREATE TABLE public.notices (
    id bigint NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    "year" smallint NOT NULL,
    "month" smallint NOT NULL,
    content text NOT NULL
);

ALTER TABLE public.notices ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.notices_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY public.notices ADD CONSTRAINT notices_pkey PRIMARY KEY (id);

-- Enable RLS for notices
ALTER TABLE public.notices ENABLE ROW LEVEL SECURITY;

-- Policies for notices
CREATE POLICY "Enable read access for all users" ON public.notices FOR SELECT USING (true);
CREATE POLICY "Enable insert for authenticated users only" ON public.notices FOR INSERT TO authenticated WITH CHECK (true);
CREATE POLICY "Enable update for authenticated users only" ON public.notices FOR UPDATE TO authenticated USING (true);
CREATE POLICY "Enable delete for authenticated users only" ON public.notices FOR DELETE TO authenticated USING (true);


-- Zakat Bank Details Table
CREATE TABLE public.zakat_bank_details (
    id bigint NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    bank_name text NOT NULL,
    account_number text NOT NULL,
    account_holder text,
    logo_url text,
    location text
);

ALTER TABLE public.zakat_bank_details ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.zakat_bank_details_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY public.zakat_bank_details ADD CONSTRAINT zakat_bank_details_pkey PRIMARY KEY (id);

-- Enable RLS for zakat_bank_details
ALTER TABLE public.zakat_bank_details ENABLE ROW LEVEL SECURITY;

-- Policies for zakat_bank_details
CREATE POLICY "Enable read access for all users" ON public.zakat_bank_details FOR SELECT USING (true);
CREATE POLICY "Enable insert for authenticated users only" ON public.zakat_bank_details FOR INSERT TO authenticated WITH CHECK (true);
CREATE POLICY "Enable update for authenticated users only" ON public.zakat_bank_details FOR UPDATE TO authenticated USING (true);
CREATE POLICY "Enable delete for authenticated users only" ON public.zakat_bank_details FOR DELETE TO authenticated USING (true);


-- Zakat Transactions Table
CREATE TABLE public.zakat_transactions (
    id bigint NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    transaction_date date NOT NULL,
    type text NOT NULL,
    amount real NOT NULL,
    source_or_recipient text NOT NULL,
    description text,
    receipt_url text
);

ALTER TABLE public.zakat_transactions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.zakat_transactions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY public.zakat_transactions ADD CONSTRAINT zakat_transactions_pkey PRIMARY KEY (id);

-- Enable RLS for zakat_transactions
ALTER TABLE public.zakat_transactions ENABLE ROW LEVEL SECURITY;

-- Policies for zakat_transactions
CREATE POLICY "Enable read access for all users" ON public.zakat_transactions FOR SELECT USING (true);
CREATE POLICY "Enable insert for authenticated users only" ON public.zakat_transactions FOR INSERT TO authenticated WITH CHECK (true);
CREATE POLICY "Enable update for authenticated users only" ON public.zakat_transactions FOR UPDATE TO authenticated USING (true);
CREATE POLICY "Enable delete for authenticated users only" ON public.zakat_transactions FOR DELETE TO authenticated USING (true);


-- Work Details Table
CREATE TABLE public.work_details (
    id bigint NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    title text NOT NULL,
    description text,
    category text,
    status text DEFAULT 'To Do'::text NOT NULL,
    assigned_to_id uuid,
    product_cost real,
    worker_cost real,
    due_date date
);

ALTER TABLE public.work_details ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.work_details_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY public.work_details ADD CONSTRAINT work_details_pkey PRIMARY KEY (id);

-- Enable RLS for work_details
ALTER TABLE public.work_details ENABLE ROW LEVEL SECURITY;

-- Policies for work_details
CREATE POLICY "Enable read access for all users" ON public.work_details FOR SELECT USING (true);
CREATE POLICY "Enable insert for authenticated users only" ON public.work_details FOR INSERT TO authenticated WITH CHECK (true);
CREATE POLICY "Enable update for authenticated users only" ON public.work_details FOR UPDATE TO authenticated USING (true);
CREATE POLICY "Enable delete for authenticated users only" ON public.work_details FOR DELETE TO authenticated USING (true);


-- Property Settings Table
CREATE TABLE public.property_settings (
    id bigint NOT NULL,
    house_name text,
    house_address text,
    bank_name text,
    bank_account_number text,
    bank_logo_url text,
    owner_name text,
    owner_photo_url text
);

ALTER TABLE public.property_settings ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.property_settings_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY public.property_settings ADD CONSTRAINT property_settings_pkey PRIMARY KEY (id);

-- Enable RLS for property_settings
ALTER TABLE public.property_settings ENABLE ROW LEVEL SECURITY;

-- Policies for property_settings
CREATE POLICY "Enable read access for all users" ON public.property_settings FOR SELECT USING (true);
CREATE POLICY "Enable insert for authenticated users only" ON public.property_settings FOR INSERT TO authenticated WITH CHECK (true);
CREATE POLICY "Enable update for authenticated users only" ON public.property_settings FOR UPDATE TO authenticated USING (true);
CREATE POLICY "Enable delete for authenticated users only" ON public.property_settings FOR DELETE TO authenticated USING (true);

-- Insert a default row for property_settings if it doesn't exist.
-- Your application logic expects a single row with id = 1.
INSERT INTO public.property_settings (id, house_name, house_address)
SELECT 1, 'My Property', '123 Main St'
WHERE NOT EXISTS (SELECT 1 FROM public.property_settings WHERE id = 1);
