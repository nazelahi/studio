
-- Property Settings Table
drop table if exists public.property_settings;

create table public.property_settings (
    id bigint generated by default as identity primary key,
    house_name text null,
    house_address text null,
    bank_name text null,
    bank_account_number text null,
    bank_logo_url text null,
    owner_name text null,
    owner_photo_url text null
);

-- Seed initial data for property_settings
insert into public.property_settings (id) values (1);

-- RLS Policies for property_settings
alter table public.property_settings enable row level security;

drop policy if exists "Allow public read access" on public.property_settings;
create policy "Allow public read access" on public.property_settings for select using (true);

drop policy if exists "Allow admin update access" on public.property_settings;
create policy "Allow admin update access" on public.property_settings for update using (auth.role() = 'authenticated');


-- Work Details Table
drop table if exists public.work_details;

create table public.work_details (
    id uuid not null default gen_random_uuid() primary key,
    title text not null,
    description text null,
    category text null,
    status text not null default 'To Do'::text check (status in ('To Do', 'In Progress', 'Completed')),
    assigned_to_id uuid null,
    product_cost numeric null,
    worker_cost numeric null,
    due_date date null,
    created_at timestamp with time zone not null default now()
);

-- RLS Policies for work_details
alter table public.work_details enable row level security;

drop policy if exists "Allow public read access" on public.work_details;
create policy "Allow public read access" on public.work_details for select using (true);

drop policy if exists "Allow admin full access" on public.work_details;
create policy "Allow admin full access" on public.work_details for all using (auth.role() = 'authenticated') with check (auth.role() = 'authenticated');
